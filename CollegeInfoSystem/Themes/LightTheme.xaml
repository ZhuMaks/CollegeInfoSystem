<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- Colors -->
    <Color x:Key="PrimaryBackgroundColor">#FFFAFAFA</Color>
    <Color x:Key="SidebarBackgroundColor">#FFF4F4F4</Color>
    <Color x:Key="HeaderBackgroundColor">#FFF0F0F0</Color>
    <Color x:Key="PrimaryTextColor">#FF2C2C2C</Color>
    <Color x:Key="SecondaryTextColor">#FF707070</Color>
    <Color x:Key="ButtonBackgroundColor">#FFE8E8E8</Color>
    <Color x:Key="ButtonHoverColor">#FFDADADA</Color>
    <Color x:Key="ButtonTextColor">#FF2C2C2C</Color>
    <Color x:Key="ToggleSwitchBackground">#FFDCDCDC</Color>
    <Color x:Key="ToggleSwitchThumb">#FF2C2C2C</Color>

    <!-- Brushes -->
    <SolidColorBrush x:Key="WindowBackgroundBrush" Color="{StaticResource PrimaryBackgroundColor}" />
    <SolidColorBrush x:Key="SidebarBackgroundBrush" Color="{StaticResource SidebarBackgroundColor}" />
    <SolidColorBrush x:Key="HeaderBackgroundBrush" Color="{StaticResource HeaderBackgroundColor}" />
    <SolidColorBrush x:Key="PrimaryTextBrush" Color="{StaticResource PrimaryTextColor}" />
    <SolidColorBrush x:Key="SecondaryTextBrush" Color="{StaticResource SecondaryTextColor}" />
    <SolidColorBrush x:Key="ButtonBrush" Color="{StaticResource ButtonBackgroundColor}" />
    <SolidColorBrush x:Key="ButtonTextBrush" Color="{StaticResource ButtonTextColor}" />
    <SolidColorBrush x:Key="ButtonHoverBrush" Color="{StaticResource ButtonHoverColor}" />
    <SolidColorBrush x:Key="ToggleSwitchBackgroundBrush" Color="{StaticResource ToggleSwitchBackground}" />
    <SolidColorBrush x:Key="ToggleSwitchThumbBrush" Color="{StaticResource ToggleSwitchThumb}" />

    <SolidColorBrush x:Key="ScrollBarTrackBrush" Color="#EEEEEE"/>
    <SolidColorBrush x:Key="ScrollBarThumbBrush" Color="#AAAAAA"/>
    <SolidColorBrush x:Key="ScrollBarThumbHoverBrush" Color="#888888"/>

    <SolidColorBrush x:Key="CheckBoxForegroundLight" Color="#333333"/>
    <SolidColorBrush x:Key="CheckBoxBackgroundLight" Color="#FFFFFF"/>
    <SolidColorBrush x:Key="CheckBoxBorderLight" Color="#888888"/>
    <SolidColorBrush x:Key="ForegroundBrush" Color="{StaticResource PrimaryTextColor}"/>

    <SolidColorBrush x:Key="TextBrush" Color="Black"/>
    <SolidColorBrush x:Key="LabelForegroundBrush" Color="Black" />
    <SolidColorBrush x:Key="DatePickerBackgroundBrush" Color="White"/>
    <SolidColorBrush x:Key="DatePickerBorderBrush" Color="#FFB0B0B0"/>
    <SolidColorBrush x:Key="DatePickerForegroundBrush" Color="Black"/>
    <SolidColorBrush x:Key="DatePickerPlaceholderBrush" Color="#FF707070"/>
    <SolidColorBrush x:Key="DatePickerDisabledForegroundBrush" Color="#FFAAAAAA"/>

    <SolidColorBrush x:Key="SelectedItemBackgroundBrush" Color="#D6EBFF"/>
    <SolidColorBrush x:Key="SelectedItemForegroundBrush" Color="#1E1E1E"/>
    <SolidColorBrush x:Key="SelectedItemBorderBrush" Color="#007ACC"/>
    <SolidColorBrush x:Key="ItemMouseOverBackgroundBrush" Color="#F0F0F0"/>





    <!-- Styles -->
    <Style x:Key="NavButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource ButtonBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource ButtonTextBrush}"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Padding" Value="14,10"/>
        <Setter Property="Margin" Value="0,6"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" CornerRadius="4">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      Margin="16,0"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource ButtonHoverBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    

    <Style x:Key="HeaderButtonStyle" TargetType="Button" BasedOn="{StaticResource NavButtonStyle}">
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
    </Style>

    <Style x:Key="ThemeToggleStyle" TargetType="ToggleButton">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid Width="50" Height="30">
                        <Border x:Name="Background" Background="{StaticResource ToggleSwitchBackgroundBrush}" CornerRadius="15"/>
                        <Ellipse x:Name="Thumb" Width="22" Height="22" Margin="4"
                                 Fill="{StaticResource ToggleSwitchThumbBrush}" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Thumb" Property="HorizontalAlignment" Value="Right"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ThemedCheckBoxStyle" TargetType="CheckBox">
        <Setter Property="Foreground" Value="{DynamicResource CheckBoxForegroundLight}"/>
        <Setter Property="Background" Value="{DynamicResource CheckBoxBackgroundLight}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource CheckBoxBorderLight}"/>
        <Setter Property="Padding" Value="4,2"/>
        <Setter Property="Margin" Value="0,0,10,0"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                        <Border x:Name="Border" Width="16" Height="16" 
                            Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="1" 
                            CornerRadius="2" 
                            Margin="0,0,6,0"/>
                        <ContentPresenter VerticalAlignment="Center" />
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="Gray"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="Gray"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="DodgerBlue"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- PasswordBoxStyle -->
    <Style x:Key="PasswordBoxStyle" TargetType="PasswordBox">
        <Setter Property="Padding" Value="6"/>
        <Setter Property="BorderBrush" Value="{DynamicResource SecondaryTextBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Background" Value="{DynamicResource WindowBackgroundBrush}"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
    </Style>

    <!-- ListBoxStyle -->
    <Style x:Key="ListBoxStyle" TargetType="ListBox">
        <Setter Property="Background" Value="{DynamicResource WindowBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource SecondaryTextBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="4"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBox">
                    <Border Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="True">
                        <ScrollViewer Padding="{TemplateBinding Padding}" Focusable="False">
                            <ItemsPresenter/>
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource DisabledTextBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="LabelStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{DynamicResource LabelForegroundBrush}" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="Margin" Value="0,5,0,2" />
    </Style>

    <Style x:Key="DatePickerStyle" TargetType="DatePicker">
        <Setter Property="Background" Value="{DynamicResource DatePickerBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource DatePickerForegroundBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource DatePickerBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="6,2"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DatePicker">
                    <Grid>
                        <DatePickerTextBox x:Name="PART_TextBox"
                                       Background="{TemplateBinding Background}"
                                       BorderBrush="{TemplateBinding BorderBrush}"
                                       BorderThickness="{TemplateBinding BorderThickness}"
                                       Foreground="{TemplateBinding Foreground}"
                                       HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                       VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                       Padding="{TemplateBinding Padding}"/>
                        <Button x:Name="PART_Button" 
                            Focusable="False" 
                            HorizontalAlignment="Right" 
                            Width="30" 
                            Margin="0"
                            BorderThickness="0"
                            Background="Transparent"
                            ToolTip="Відкрити календар">
                            <Path Data="M7 10h2v2H7zM6 3h6v1H6zM4 6h10v1H4z" Fill="{TemplateBinding Foreground}" Stretch="Uniform" />
                        </Button>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="PART_TextBox" Property="Foreground" Value="{DynamicResource DatePickerDisabledForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ListViewItem">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="6" />
        <Setter Property="Margin" Value="0,4" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <Border x:Name="Bd"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{x:Null}"
                        CornerRadius="6"
                        SnapsToDevicePixels="True"
                        Padding="{TemplateBinding Padding}">
                        <GridViewRowPresenter 
                        Content="{TemplateBinding Content}" 
                        Columns="{TemplateBinding GridView.ColumnCollection}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource SelectedItemBackgroundBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource SelectedItemForegroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource ItemMouseOverBackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="Gray" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ComboBoxStyle" TargetType="ComboBox">
        <Setter Property="Background" Value="{DynamicResource WindowBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource SecondaryTextBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="6"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton Name="ToggleButton"
              Background="{TemplateBinding Background}"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}"
              Foreground="{TemplateBinding Foreground}"
              IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
              ClickMode="Press">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="20" />
                                    <!-- ширина для іконки -->
                                </Grid.ColumnDefinitions>

                                <ContentPresenter Grid.Column="0"
                          Margin="4,2,4,2"
                          HorizontalAlignment="Left"
                          VerticalAlignment="Center"
                          RecognizesAccessKey="True"
                          Content="{TemplateBinding SelectionBoxItem}"
                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>

                                <Path Grid.Column="1"
              HorizontalAlignment="Center"
              VerticalAlignment="Center"
              Fill="{TemplateBinding Foreground}"
              Data="M 0 0 L 4 4 L 8 0 Z"/>
                            </Grid>
                        </ToggleButton>
                        <Popup Name="Popup"
                           Placement="Bottom"
                           IsOpen="{TemplateBinding IsDropDownOpen}"
                           AllowsTransparency="True"
                           Focusable="False"
                           PopupAnimation="Slide">
                            <Grid Name="DropDown"
                              SnapsToDevicePixels="True"
                              MinWidth="{TemplateBinding ActualWidth}"
                              MaxHeight="200"
                              Background="{DynamicResource WindowBackgroundBrush}">
                                <Border x:Name="DropDownBorder"
                                    Background="{DynamicResource WindowBackgroundBrush}"
                                    BorderBrush="{DynamicResource SecondaryTextBrush}"
                                    BorderThickness="1"/>
                                <ScrollViewer Margin="4,6,4,6"
                                          SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True"
                                            KeyboardNavigation.DirectionalNavigation="Contained"/>
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Приховані кнопки RepeatButton -->
    <Style x:Key="ScrollBarRepeatButtonStyle" TargetType="RepeatButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Rectangle Fill="Transparent" Height="0" Width="0"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Thumb стиль для горизонтального скролбару -->
    <Style x:Key="ScrollBarThumbStyleHorizontal" TargetType="Thumb">
        <Setter Property="Height" Value="8"/>
        <Setter Property="MinWidth" Value="20"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Border Background="{DynamicResource ScrollBarThumbBrush}" CornerRadius="4"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Thumb стиль для вертикального скролбару -->
    <Style x:Key="ScrollBarThumbStyleVertical" TargetType="Thumb">
        <Setter Property="Width" Value="8"/>
        <Setter Property="MinHeight" Value="20"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Border Background="{DynamicResource ScrollBarThumbBrush}" CornerRadius="4"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Стиль ScrollBar -->
    <Style TargetType="ScrollBar">
        <Setter Property="Width" Value="8"/>
        <Setter Property="Height" Value="8"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollBar">
                    <Grid Background="Transparent" SnapsToDevicePixels="True">
                        <Track Name="PART_Track" IsDirectionReversed="True" Focusable="False" IsEnabled="{TemplateBinding IsEnabled}">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Style="{StaticResource ScrollBarRepeatButtonStyle}" Command="ScrollBar.PageUpCommand" />
                            </Track.DecreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb 
                                Style="{StaticResource ScrollBarThumbStyleVertical}" 
                                x:Name="Thumb" />
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Style="{StaticResource ScrollBarRepeatButtonStyle}" Command="ScrollBar.PageDownCommand" />
                            </Track.IncreaseRepeatButton>
                        </Track>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="Horizontal">
                            <Setter TargetName="Thumb" Property="Style" Value="{StaticResource ScrollBarThumbStyleHorizontal}"/>
                            <Setter Property="Width" Value="Auto"/>
                            <Setter Property="Height" Value="8"/>
                        </Trigger>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter TargetName="Thumb" Property="Style" Value="{StaticResource ScrollBarThumbStyleVertical}"/>
                            <Setter Property="Width" Value="8"/>
                            <Setter Property="Height" Value="Auto"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


</ResourceDictionary>
